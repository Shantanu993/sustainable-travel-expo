rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and update their own profiles
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || 
        exists(/databases/$(database)/documents/friendships/$(request.auth.uid + '_' + userId)) || 
        exists(/databases/$(database)/documents/friendships/$(userId + '_' + request.auth.uid)));
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
    }
    
    // Trip rules
    match /trips/{tripId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Activity logs rules
    match /activityLogs/{logId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Daily footprints rules
    match /dailyFootprints/{footprintId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || 
        exists(/databases/$(database)/documents/friendships/$(request.auth.uid + '_' + resource.data.userId)) || 
        exists(/databases/$(database)/documents/friendships/$(resource.data.userId + '_' + request.auth.uid)));
      allow write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Friendship rules
    match /friendships/{friendshipId} {
      allow read: if request.auth != null && 
        (friendshipId.matches(request.auth.uid + '_.*') || friendshipId.matches('.*_' + request.auth.uid));
      allow create, update: if request.auth != null && 
        (request.resource.data.user1Id == request.auth.uid || request.resource.data.user2Id == request.auth.uid);
    }
    
    // Leaderboard is public to all authenticated users
    match /leaderboard/{entry} {
      allow read: if request.auth != null;
    }
    
    // Configuration is read-only for authenticated users
    match /configuration/{configId} {
      allow read: if request.auth != null;
    }
  }
}
